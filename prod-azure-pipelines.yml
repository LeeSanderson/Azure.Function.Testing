pool:
  vmImage: 'windows-latest'

# Trigger production build (i.e. Nuget publish) after successful build pipeline run on main branch
resources:
  pipelines:
    - pipeline: AzureFunctionsTestingBuild
      source: "AzureFunctionsTestingBuild"
      trigger:
        enabled: true
        branches:
          include:
            - main

trigger: none
pr: none

variables:
  - group: SharedVariables

steps:
- checkout: self
  clean: true
  persistCredentials: true
  fetchDepth: 2

# Make sure we can are not in detached HEAD mode by switching to the source branch
- pwsh: |
   git log -n 2
   write-host("")

   $hashes = @(git log -n 2 --format='%h' --abbrev-commit)
   if ($hashes.Length -lt 2) 
   {
       throw "Unable to get previous commit hash from git log. Make sure fetchDepth is 2 or more."
   }

   $sourceChanged = $false
   $cmdOutput = 
   foreach ($_ in @(git diff  --name-only `@~ `@ ./Src)) 
   {
       $sourceChanged = $true
       break
   }

   if ($sourceChanged)
   {
        write-host("Source code change detected, new NuGet package will be build")
        write-host("##vso[task.setvariable variable=sourceupdated]true")
    }
    else 
    {
        write-host("No source code change detected, NuGet package publish will be skipped")
        write-host("##vso[task.setvariable variable=sourceupdated]false")
    }

- download: AzureFunctionsTestingBuild
  artifact: NuGetPackage

- task: UseDotNet@2 # ensure the .NET Core SDK is installed

- script: dotnet -d nuget push "*.nupkg" --api-key $(NuGetApiKey) --source https://api.nuget.org/v3/index.json
  workingDirectory: $(Pipeline.Workspace)\AzureFunctionsTestingBuild\NuGetPackage\
  displayName: Publish to NuGet
  condition: eq(variables.sourceupdated, 'true')
