pool:
  vmImage: 'windows-latest'

# Trigger production build (i.e. Nuget publish) after successful build pipeline run on main branch
resources:
  pipelines:
    - pipeline: AzureFunctionsTestingBuild
      source: "AzureFunctionsTestingBuild"
      trigger:
        enabled: true
        branches:
          include:
            - main

trigger: none
pr: none

variables:
  - group: SharedVariables

steps:
- checkout: self
  clean: true
  persistCredentials: true

# Make sure we can are not in detached HEAD mode by switching to the source branch
- pwsh: |
   echo "Switching to $(Build.SourceBranch)"
   git fetch --all
   $baseBranch = [io.path]::GetFileNameWithoutExtension("$(Build.SourceBranch)")
   git switch $baseBranch
   git log -n 1
   $hashes = @(git log -n 2 --format='%h' --abbrev-commit)
   $previousCommitHash = $hashes[1]
   write-host("Executing command: git diff --name-only $(previousCommitHash)")
   git diff --name-only $previousCommitHash
   write-host("End of command output")

   $sourceChanged = $false
   $cmdOutput = @(git diff  --name-only $previousCommitHash)
   foreach ($line in $cmdOutput) 
   {
       if ($line -like "Src/*")
       {
           $sourceChanged = $true
           break
       }
   }

   if ($sourceChanged)
   {
        write-host("Source code change detected, new NuGet package will be build")
        write-host("##vso[task.setvariable variable=sourceupdated]true")
    }
    else 
    {
        write-host("No source code change detected, NuGet package publish will be skipped")
        write-host("##vso[task.setvariable variable=sourceupdated]false")
    }

- download: AzureFunctionsTestingBuild
  artifact: NuGetPackage

- task: UseDotNet@2 # ensure the .NET Core SDK is installed

- script: dotnet -d nuget push "*.nupkg" --api-key $(NuGetApiKey) --source https://api.nuget.org/v3/index.json
  workingDirectory: $(Pipeline.Workspace)\AzureFunctionsTestingBuild\NuGetPackage\
  displayName: Publish to NuGet
  condition: eq(variables.sourceupdated, 'true')
